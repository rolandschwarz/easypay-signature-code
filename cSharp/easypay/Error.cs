namespace easypay.swisscom.com
{
    /// <summary>
    ///     Possible Errors (code on message object)
    /// </summary>
    public class Error
    {
        public const string OPERATION_INVALID = "OPERATION_INVALID";
        public const string INVALID_AMOUNT_FORMAT = "INVALID_AMOUNT_FORMAT";
        public const string MISSING_MANDATORY_FIELD = "MISSING_MANDATORY_FIELD";
        public const string SUBSCRIPTION_ALREADY_CANCELED = "SUBSCRIPTION_ALREADY_CANCELED";
        public const string RENEWAL_TO_EARLY = "RENEWAL_TO_EARLY";
        public const string TRANSACTION_ALREADY_REJECTED = "TRANSACTION_ALREADY_REJECTED";
        public const string TRANSACTION_ALREADY_COMMITTED = "TRANSACTION_ALREADY_COMMITTED";
        public const string TRANSACTION_NOT_COMMITTED = "TRANSACTION_NOT_COMMITTED";
        public const string CE_NOT_AUTHORIZED = "CE_NOT_AUTHORIZED";
        public const string CE_NOT_AUTHORIZED_SIM_NOT_ACTIVE = "CE_NOT_AUTHORIZED_SIM_NOT_ACTIVE";
        public const string CE_NOT_AUTHORIZED_BARRING_STATE_REACHED = "CE_NOT_AUTHORIZED_BARRING_STATE_REACHED";
        public const string CE_NOT_AUTHORIZED_NOT_SUPPORTED_ROAMING = "CE_NOT_AUTHORIZED_NOT_SUPPORTED_ROAMING";
        public const string CE_NOT_AUTHORIZED_NOT_SUPPORTED_TELCO = "CE_NOT_AUTHORIZED_NOT_SUPPORTED_TELCO";
        public const string CE_NOT_AUTHORIZED_BLOCKED_ADULT_CHECK_FAILED = "CE_NOT_AUTHORIZED_BLOCKED_ADULT_CHECK_FAILED";
        public const string CE_NOT_AUTHORIZED_BLOCKED_CUSTOMER_FOR_ADULT = "CE_NOT_AUTHORIZED_BLOCKED_CUSTOMER_FOR_ADULT";
        public const string CE_NOT_AUTHORIZED_BLOCKED_VAS_NOT_ALLOWED = "CE_NOT_AUTHORIZED_BLOCKED_VAS_NOT_ALLOWED";
        public const string CE_NOT_AUTHORIZED_BLOCKED_TOP_STOP_REACHED = "CE_NOT_AUTHORIZED_BLOCKED_TOP_STOP_REACHED";
        public const string CE_NOT_AUTHORIZED_BLOCKED_SPENDING_LIMIT_REACHED = "CE_NOT_AUTHORIZED_BLOCKED_SPENDING_LIMIT_REACHED";
        public const string CE_NOT_AUTHORIZED_BLOCKED_NOT_ENOUGH_PREPAID_CREDIT = "CE_NOT_AUTHORIZED_BLOCKED_NOT_ENOUGH_PREPAID_CREDIT";

        private Error()
        {
        } // prevent instantiation
    }
}